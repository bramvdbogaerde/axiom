%% Test set operations with literals

syntax {
  element, x in Element ::= a() | b() | c() | d() | f(element, element) | g(element);
  mySet in Set(Element);
  result in Result ::= setsameorder() | setdifforder() | singleelement() | emptyseteq() | setwithfunctors() | complexmembership() | complexmembershipalt();
};

rules {
  rule "set-equality-same-order"
  [ {a(), b()} = {a(), b()} ] =>
  [ setsameorder() ];
  
  rule "set-equality-different-order"
  [ {a(), b()} = {b(), a()} ] =>
  [ setdifforder() ];
  
  rule "single-element-equality"
  [ {a()} = {a()} ] =>
  [ singleelement() ];
  
  rule "empty-set-equality"
  [ {} = {} ] =>
  [ emptyseteq() ];
  
  rule "set-with-functors"
  [ mySet = {f(a(), b()), g(c())} ] =>
  [ setwithfunctors() ];
  
  rule "complex-membership-test"
  [ x in {f(a(), b()), g(c())}; x = f(a(), b()) ] =>
  [ complexmembership() ];
  
  rule "complex-membership-test-alt"  
  [ x in {f(a(), b()), g(c())}; x = g(c()) ] =>
  [ complexmembershipalt() ];
  
};

%_test: setsameorder()
%_test: setdifforder()
%_test: singleelement()
%_test: emptyseteq()
%test: setwithfunctors()
%test: complexmembership()
%test: complexmembershipalt()
