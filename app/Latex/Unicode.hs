module Latex.Unicode (unicodeToLatex, replaceUnicodeInString) where

import qualified Data.Map.Strict as Map

-- | Mapping from Unicode symbols to their LaTeX command equivalents
unicodeToLatexMap :: Map.Map Char String
unicodeToLatexMap = Map.fromList
  -- Greek letters (lowercase)
  [ ('α', "\\alpha")
  , ('β', "\\beta")
  , ('γ', "\\gamma")
  , ('δ', "\\delta")
  , ('ε', "\\epsilon")
  , ('ζ', "\\zeta")
  , ('η', "\\eta")
  , ('θ', "\\theta")
  , ('ι', "\\iota")
  , ('κ', "\\kappa")
  , ('λ', "\\lambda")
  , ('μ', "\\mu")
  , ('ν', "\\nu")
  , ('ξ', "\\xi")
  , ('ο', "\\omicron")
  , ('π', "\\pi")
  , ('ρ', "\\rho")
  , ('ς', "\\varsigma")
  , ('σ', "\\sigma")
  , ('τ', "\\tau")
  , ('υ', "\\upsilon")
  , ('φ', "\\phi")
  , ('χ', "\\chi")
  , ('ψ', "\\psi")
  , ('ω', "\\omega")

  -- Greek letters (uppercase)
  , ('Α', "\\Alpha")
  , ('Β', "\\Beta")
  , ('Γ', "\\Gamma")
  , ('Δ', "\\Delta")
  , ('Ε', "\\Epsilon")
  , ('Ζ', "\\Zeta")
  , ('Η', "\\Eta")
  , ('Θ', "\\Theta")
  , ('Ι', "\\Iota")
  , ('Κ', "\\Kappa")
  , ('Λ', "\\Lambda")
  , ('Μ', "\\Mu")
  , ('Ν', "\\Nu")
  , ('Ξ', "\\Xi")
  , ('Ο', "\\Omicron")
  , ('Π', "\\Pi")
  , ('Ρ', "\\Rho")
  , ('Σ', "\\Sigma")
  , ('Τ', "\\Tau")
  , ('Υ', "\\Upsilon")
  , ('Φ', "\\Phi")
  , ('Χ', "\\Chi")
  , ('Ψ', "\\Psi")
  , ('Ω', "\\Omega")

  -- Mathematical operators
  , ('∀', "\\forall")
  , ('∃', "\\exists")
  , ('∄', "\\nexists")
  , ('∅', "\\emptyset")
  , ('∈', "\\in")
  , ('∉', "\\notin")
  , ('∋', "\\ni")
  , ('∌', "\\not\\ni")
  , ('∩', "\\cap")
  , ('∪', "\\cup")
  , ('⊂', "\\subset")
  , ('⊃', "\\supset")
  , ('⊆', "\\subseteq")
  , ('⊇', "\\supseteq")
  , ('⊈', "\\not\\subseteq")
  , ('⊉', "\\not\\supseteq")
  , ('⊊', "\\subsetneq")
  , ('⊋', "\\supsetneq")
  , ('∧', "\\land")
  , ('∨', "\\lor")
  , ('¬', "\\neg")
  , ('⇒', "\\Rightarrow")
  , ('⇐', "\\Leftarrow")
  , ('⇔', "\\Leftrightarrow")
  , ('→', "\\rightarrow")
  , ('←', "\\leftarrow")
  , ('↔', "\\leftrightarrow")
  , ('↦', "\\mapsto")
  , ('⊢', "\\vdash")
  , ('⊨', "\\models")
  , ('⊥', "\\bot")
  , ('⊤', "\\top")
  , ('∞', "\\infty")
  , ('∂', "\\partial")
  , ('∇', "\\nabla")
  , ('∫', "\\int")
  , ('∑', "\\sum")
  , ('∏', "\\prod")
  , ('√', "\\sqrt")
  , ('∝', "\\propto")
  , ('≈', "\\approx")
  , ('≠', "\\neq")
  , ('≡', "\\equiv")
  , ('≢', "\\not\\equiv")
  , ('≤', "\\leq")
  , ('≥', "\\geq")
  , ('≪', "\\ll")
  , ('≫', "\\gg")
  , ('⊕', "\\oplus")
  , ('⊗', "\\otimes")
  , ('⊙', "\\odot")
  , ('⊖', "\\ominus")
  , ('⊘', "\\oslash")
  , ('⊎', "\\uplus")
  , ('⊓', "\\sqcap")
  , ('⊔', "\\sqcup")
  , ('⊑', "\\sqsubseteq")
  , ('⊒', "\\sqsupseteq")
  , ('⋃', "\\bigcup")
  , ('⋂', "\\bigcap")
  , ('⋁', "\\bigvee")
  , ('⋀', "\\bigwedge")

  -- Arrows
  , ('↑', "\\uparrow")
  , ('↓', "\\downarrow")
  , ('⇑', "\\Uparrow")
  , ('⇓', "\\Downarrow")
  , ('↕', "\\updownarrow")
  , ('⇕', "\\Updownarrow")
  , ('↗', "\\nearrow")
  , ('↘', "\\searrow")
  , ('↙', "\\swarrow")
  , ('↖', "\\nwarrow")
  , ('↪', "\\hookrightarrow")
  , ('↩', "\\hookleftarrow")
  , ('⇀', "\\rightharpoonup")
  , ('⇁', "\\rightharpoondown")
  , ('↼', "\\leftharpoonup")
  , ('↽', "\\leftharpoondown")
  , ('⊸', "\\multimap")

  -- Set theory and logic
  , ('ℕ', "\\mathbb{N}")
  , ('ℤ', "\\mathbb{Z}")
  , ('ℚ', "\\mathbb{Q}")
  , ('ℝ', "\\mathbb{R}")
  , ('ℂ', "\\mathbb{C}")
  , ('ℙ', "\\mathbb{P}")
  , ('∎', "\\qed")
  , ('■', "\\blacksquare")
  , ('□', "\\square")
  , ('◇', "\\Diamond")
  , ('○', "\\circ")
  , ('●', "\\bullet")
  , ('★', "\\star")
  , ('†', "\\dagger")
  , ('‡', "\\ddagger")

  -- Miscellaneous
  , ('℘', "\\wp")
  , ('ℓ', "\\ell")
  , ('ℏ', "\\hbar")
  , ('ℑ', "\\Im")
  , ('ℜ', "\\Re")
  , ('∠', "\\angle")
  , ('∡', "\\measuredangle")
  , ('⊥', "\\perp")
  , ('∥', "\\parallel")
  , ('∦', "\\nparallel")
  , ('⋮', "\\vdots")
  , ('⋯', "\\cdots")
  , ('⋱', "\\ddots")
  , ('…', "\\ldots")
  , ('·', "\\cdot")
  , ('×', "\\times")
  , ('÷', "\\div")
  , ('±', "\\pm")
  , ('∓', "\\mp")
  , ('∘', "\\circ")
  , ('⋆', "\\star")
  , ('⊺', "\\top")
  , ('ᵀ', "^{T}")
  , ('′', "'")
  , ('″', "''")
  , ('‴', "'''")

  -- Delimiters
  , ('⟨', "\\langle")
  , ('⟩', "\\rangle")
  , ('⟦', "\\llbracket")
  , ('⟧', "\\rrbracket")
  , ('⌈', "\\lceil")
  , ('⌉', "\\rceil")
  , ('⌊', "\\lfloor")
  , ('⌋', "\\rfloor")

  -- Turnstiles and forcing
  , ('⊩', "\\Vdash")
  , ('⊪', "\\Vvdash")
  , ('⊫', "\\VDash")
  , ('⊬', "\\nvdash")
  , ('⊭', "\\nvDash")
  , ('⊮', "\\nVdash")
  , ('⊯', "\\nVDash")

  -- Additional symbols
  , ('∴', "\\therefore")
  , ('∵', "\\because")
  , ('∣', "\\mid")
  , ('∤', "\\nmid")
  , ('⋄', "\\diamond")
  , ('◊', "\\lozenge")
  ]

-- | Convert a single Unicode character to its LaTeX equivalent
-- Returns the LaTeX command if found, otherwise returns the character as a string
unicodeToLatex :: Char -> String
unicodeToLatex c = Map.findWithDefault [c] c unicodeToLatexMap

-- | Replace all Unicode symbols in a string with their LaTeX equivalents
replaceUnicodeInString :: String -> String
replaceUnicodeInString = concatMap unicodeToLatex
