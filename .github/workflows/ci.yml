name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc: ['9.6.6']
      fail-fast: false
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Haskell
      uses: haskell-actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: 'latest'
        
    - name: Configure Cabal
      run: |
        cabal configure --enable-tests --enable-benchmarks
        cabal update
    
    - name: Cache Cabal dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-cabal-
          ${{ runner.os }}-cabal-
          
    - name: Install dependencies
      run: cabal build --dependencies-only all
      
    - name: Build project
      run: cabal build all
      
    - name: Run tests
      run: |
        # Create test results directory
        mkdir -p test-results
        
        # Run tests and capture output and exit code
        set +e
        cabal test all --test-show-details=direct | tee test-results/test-output.txt
        TEST_EXIT_CODE=${PIPESTATUS[0]}
        
        # Generate JUnit XML report from test output
        python3 .github/workflows/convert_to_junit.py
        
        # Exit with the original test exit code
        exit $TEST_EXIT_CODE
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-ghc-${{ matrix.ghc }}
        path: test-results/
        retention-days: 30
