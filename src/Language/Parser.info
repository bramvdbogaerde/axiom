-----------------------------------------------------------------------------
Info file generated by Happy Version 2.0.2 from src/Language/Parser.y
-----------------------------------------------------------------------------


terminal '.' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseProgramTokens -> Program               (0)
	%start_parseTermTokens -> Term                     (1)
	%start_parseRuleTokens -> Rule                     (2)
	%start_parseGoalTokens -> Goal                     (3)
	Program -> ProgramElements                         (4)
	ProgramElements ->                                 (5)
	ProgramElements -> ProgramElement ProgramElements   (6)
	ProgramElement -> Declaration ';'                  (7)
	ProgramElement -> HaskellBlock                     (8)
	Declaration -> SyntaxBlock                         (9)
	Declaration -> RulesBlock                          (10)
	Declaration -> TransitionDecl                      (11)
	Declaration -> RewriteRule                         (12)
	Declaration -> ImportDecl                          (13)
	SyntaxBlock -> 'syntax' '{' SyntaxDecls '}'        (14)
	SyntaxDecls ->                                     (15)
	SyntaxDecls -> SyntaxDecl ';' SyntaxDecls          (16)
	SyntaxDecl -> TypeRef MaybeProductions             (17)
	SyntaxDecl -> IdentList 'in' TypeRef MaybeProductions   (18)
	TypeRef -> IDENT                                   (19)
	TypeRef -> IDENT '(' TypeRefs ')'                  (20)
	TypeRef -> HASKEXPR                                (21)
	TypeRefs ->                                        (22)
	TypeRefs -> TypeRef                                (23)
	TypeRefs -> TypeRef ',' TypeRefs                   (24)
	IdentList -> IDENT                                 (25)
	IdentList -> IDENT ',' IdentList                   (26)
	MaybeProductions ->                                (27)
	MaybeProductions -> '::=' Productions              (28)
	Productions -> Term                                (29)
	Productions -> Term '|' Productions                (30)
	RulesBlock -> 'rules' '{' Rules '}'                (31)
	Rules ->                                           (32)
	Rules -> Rule ';' Rules                            (33)
	Rule -> 'rule' STRING '[' Goals ']' '=>' '[' TermList ']'   (34)
	Goals ->                                           (35)
	Goals -> Goal                                      (36)
	Goals -> Goal ';' Goals                            (37)
	TermList ->                                        (38)
	TermList -> Terms                                  (39)
	Terms -> Term                                      (40)
	Terms -> Term ';' Terms                            (41)
	TransitionDecl -> 'transition' IDENT '~>' IDENT    (42)
	RewriteRule -> IDENT '(' TermArgs ')' '=' Term     (43)
	ImportDecl -> 'import' STRING                      (44)
	TermArgs ->                                        (45)
	TermArgs -> TermArgList                            (46)
	TermArgList -> Term                                (47)
	TermArgList -> Term ',' TermArgList                (48)
	HaskellBlock -> HASKBLOCK                          (49)
	Term -> BasicTerm                                  (50)
	Term -> Term '~>' Term                             (51)
	Term -> BigStepExpr                                (52)
	Term -> '{' Elements '}'                           (53)
	BigStepExpr -> '(' Elements ')' '⇓' '(' Elements ')'   (54)
	Expr -> '[' Bindings ']'                           (55)
	Expr -> BasicTerm '[' Bindings ']'                 (56)
	Bindings ->                                        (57)
	Bindings -> Binding                                (58)
	Bindings -> Binding ';' Bindings                   (59)
	Binding -> Term '|->' Term                         (60)
	Elements ->                                        (61)
	Elements -> Term                                   (62)
	Elements -> Term ',' Elements                      (63)
	BasicTerm -> IDENT                                 (64)
	BasicTerm -> IDENT '(' TermArgs ')'                (65)
	BasicTerm -> HASKEXPR                              (66)
	BasicTerm -> INTLIT                                (67)
	BasicTerm -> BOOL                                  (68)
	BasicTerm -> Expr                                  (69)
	Goal -> Term                                       (70)
	Goal -> IDENT 'in' Term                            (71)
	Goal -> Term '=' Term                              (72)
	Goal -> Term '/=' Term                             (73)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'::='          { TokenWithRange IsDefinedAs _ }
	'~>'           { TokenWithRange LeadsTo _ }
	'=>'           { TokenWithRange Implies _ }
	'='            { TokenWithRange Equal _ }
	'/='           { TokenWithRange NotEqual _ }
	'⇓'            { TokenWithRange BigStep _ }
	'rules'        { TokenWithRange Rules _ }
	'rule'         { TokenWithRange Rule _ }
	BOOL           { TokenWithRange (Boo _) _ }
	'syntax'       { TokenWithRange (Ident "syntax") _ }
	'in'           { TokenWithRange (Ident "in") _ }
	'transition'   { TokenWithRange (Ident "transition") _ }
	'import'       { TokenWithRange (Ident "import") _ }
	'('            { TokenWithRange Lpar _ }
	')'            { TokenWithRange Rpar _ }
	'{'            { TokenWithRange LCBa _ }
	'}'            { TokenWithRange RCBa _ }
	'['            { TokenWithRange LBra _ }
	']'            { TokenWithRange RBra _ }
	','            { TokenWithRange Comma _ }
	'.'            { TokenWithRange Dot _ }
	';'            { TokenWithRange Sem _ }
	'|'            { TokenWithRange Bar _ }
	'|->'          { TokenWithRange MapsTo _ }
	IDENT          { TokenWithRange (Ident _) _ }
	STRING         { TokenWithRange (Quo _) _ }
	INTLIT         { TokenWithRange (IntLit _) _ }
	HASKEXPR       { TokenWithRange (Token.HaskellExpr _) _ }
	HASKBLOCK      { TokenWithRange (Token.Hask _) _ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseProgramTokens rule  0
	%start_parseTermTokens rule  1
	%start_parseRuleTokens rule  2
	%start_parseGoalTokens rule  3
	Program         rule  4
	ProgramElements rules 5, 6
	ProgramElement  rules 7, 8
	Declaration     rules 9, 10, 11, 12, 13
	SyntaxBlock     rule  14
	SyntaxDecls     rules 15, 16
	SyntaxDecl      rules 17, 18
	TypeRef         rules 19, 20, 21
	TypeRefs        rules 22, 23, 24
	IdentList       rules 25, 26
	MaybeProductions rules 27, 28
	Productions     rules 29, 30
	RulesBlock      rule  31
	Rules           rules 32, 33
	Rule            rule  34
	Goals           rules 35, 36, 37
	TermList        rules 38, 39
	Terms           rules 40, 41
	TransitionDecl  rule  42
	RewriteRule     rule  43
	ImportDecl      rule  44
	TermArgs        rules 45, 46
	TermArgList     rules 47, 48
	HaskellBlock    rule  49
	Term            rules 50, 51, 52, 53
	BigStepExpr     rule  54
	Expr            rules 55, 56
	Bindings        rules 57, 58, 59
	Binding         rule  60
	Elements        rules 61, 62, 63
	BasicTerm       rules 64, 65, 66, 67, 68, 69
	Goal            rules 70, 71, 72, 73

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseProgramTokens -> . Program              (rule 0)

	'rules'        shift, and enter state 14
	'syntax'       shift, and enter state 15
	'transition'   shift, and enter state 16
	'import'       shift, and enter state 17
	IDENT          shift, and enter state 18
	HASKBLOCK      shift, and enter state 19
	%eof           reduce using rule 5

	Program        goto state 36
	ProgramElementsgoto state 5
	ProgramElement goto state 6
	Declaration    goto state 7
	SyntaxBlock    goto state 8
	RulesBlock     goto state 9
	TransitionDecl goto state 10
	RewriteRule    goto state 11
	ImportDecl     goto state 12
	HaskellBlock   goto state 13

State 1

	%start_parseTermTokens -> . Term                    (rule 1)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 34
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 2

	%start_parseRuleTokens -> . Rule                    (rule 2)

	'rule'         shift, and enter state 33

	Rule           goto state 32

State 3

	%start_parseGoalTokens -> . Goal                    (rule 3)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 29
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 20
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23
	Goal           goto state 24

State 4

	Program -> . ProgramElements                        (rule 4)

	'rules'        shift, and enter state 14
	'syntax'       shift, and enter state 15
	'transition'   shift, and enter state 16
	'import'       shift, and enter state 17
	IDENT          shift, and enter state 18
	HASKBLOCK      shift, and enter state 19

	ProgramElementsgoto state 5
	ProgramElement goto state 6
	Declaration    goto state 7
	SyntaxBlock    goto state 8
	RulesBlock     goto state 9
	TransitionDecl goto state 10
	RewriteRule    goto state 11
	ImportDecl     goto state 12
	HaskellBlock   goto state 13

State 5

	Program -> ProgramElements .                        (rule 4)

	%eof           reduce using rule 4


State 6

	ProgramElements -> ProgramElement . ProgramElements    (rule 6)

	'rules'        shift, and enter state 14
	'syntax'       shift, and enter state 15
	'transition'   shift, and enter state 16
	'import'       shift, and enter state 17
	IDENT          shift, and enter state 18
	HASKBLOCK      shift, and enter state 19
	%eof           reduce using rule 5

	ProgramElementsgoto state 56
	ProgramElement goto state 6
	Declaration    goto state 7
	SyntaxBlock    goto state 8
	RulesBlock     goto state 9
	TransitionDecl goto state 10
	RewriteRule    goto state 11
	ImportDecl     goto state 12
	HaskellBlock   goto state 13

State 7

	ProgramElement -> Declaration . ';'                 (rule 7)

	';'            shift, and enter state 55


State 8

	Declaration -> SyntaxBlock .                        (rule 9)

	';'            reduce using rule 9


State 9

	Declaration -> RulesBlock .                         (rule 10)

	';'            reduce using rule 10


State 10

	Declaration -> TransitionDecl .                     (rule 11)

	';'            reduce using rule 11


State 11

	Declaration -> RewriteRule .                        (rule 12)

	';'            reduce using rule 12


State 12

	Declaration -> ImportDecl .                         (rule 13)

	';'            reduce using rule 13


State 13

	ProgramElement -> HaskellBlock .                    (rule 8)

	'rules'        reduce using rule 8
	'syntax'       reduce using rule 8
	'transition'   reduce using rule 8
	'import'       reduce using rule 8
	IDENT          reduce using rule 8
	HASKBLOCK      reduce using rule 8
	%eof           reduce using rule 8


State 14

	RulesBlock -> 'rules' . '{' Rules '}'               (rule 31)

	'{'            shift, and enter state 54


State 15

	SyntaxBlock -> 'syntax' . '{' SyntaxDecls '}'       (rule 14)

	'{'            shift, and enter state 53


State 16

	TransitionDecl -> 'transition' . IDENT '~>' IDENT    (rule 42)

	IDENT          shift, and enter state 52


State 17

	ImportDecl -> 'import' . STRING                     (rule 44)

	STRING         shift, and enter state 51


State 18

	RewriteRule -> IDENT . '(' TermArgs ')' '=' Term    (rule 43)

	'('            shift, and enter state 50


State 19

	HaskellBlock -> HASKBLOCK .                         (rule 49)

	'rules'        reduce using rule 49
	'syntax'       reduce using rule 49
	'transition'   reduce using rule 49
	'import'       reduce using rule 49
	IDENT          reduce using rule 49
	HASKBLOCK      reduce using rule 49
	%eof           reduce using rule 49


State 20

	Term -> Term . '~>' Term                            (rule 51)
	Goal -> Term .                                      (rule 70)
	Goal -> Term . '=' Term                             (rule 72)
	Goal -> Term . '/=' Term                            (rule 73)

	'~>'           shift, and enter state 38
	'='            shift, and enter state 48
	'/='           shift, and enter state 49
	']'            reduce using rule 70
	';'            reduce using rule 70
	%eof           reduce using rule 70


State 21

	Term -> BigStepExpr .                               (rule 52)

	'~>'           reduce using rule 52
	'='            reduce using rule 52
	'/='           reduce using rule 52
	')'            reduce using rule 52
	'}'            reduce using rule 52
	']'            reduce using rule 52
	','            reduce using rule 52
	';'            reduce using rule 52
	'|'            reduce using rule 52
	'|->'          reduce using rule 52
	%eof           reduce using rule 52


State 22

	BasicTerm -> Expr .                                 (rule 69)

	'~>'           reduce using rule 69
	'='            reduce using rule 69
	'/='           reduce using rule 69
	')'            reduce using rule 69
	'}'            reduce using rule 69
	'['            reduce using rule 69
	']'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	'|'            reduce using rule 69
	'|->'          reduce using rule 69
	%eof           reduce using rule 69


State 23

	Term -> BasicTerm .                                 (rule 50)
	Expr -> BasicTerm . '[' Bindings ']'                (rule 56)

	'~>'           reduce using rule 50
	'='            reduce using rule 50
	'/='           reduce using rule 50
	')'            reduce using rule 50
	'}'            reduce using rule 50
	'['            shift, and enter state 47
	']'            reduce using rule 50
	','            reduce using rule 50
	';'            reduce using rule 50
	'|'            reduce using rule 50
	'|->'          reduce using rule 50
	%eof           reduce using rule 50


State 24

	%start_parseGoalTokens -> Goal .                    (rule 3)

	%eof           accept


State 25

	BasicTerm -> BOOL .                                 (rule 68)

	'~>'           reduce using rule 68
	'='            reduce using rule 68
	'/='           reduce using rule 68
	')'            reduce using rule 68
	'}'            reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68
	'|'            reduce using rule 68
	'|->'          reduce using rule 68
	%eof           reduce using rule 68


State 26

	BigStepExpr -> '(' . Elements ')' '⇓' '(' Elements ')'    (rule 54)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 61
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 44
	BigStepExpr    goto state 21
	Expr           goto state 22
	Elements       goto state 46
	BasicTerm      goto state 23

State 27

	Term -> '{' . Elements '}'                          (rule 53)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'}'            reduce using rule 61
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 44
	BigStepExpr    goto state 21
	Expr           goto state 22
	Elements       goto state 45
	BasicTerm      goto state 23

State 28

	Expr -> '[' . Bindings ']'                          (rule 55)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	']'            reduce using rule 57
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 41
	BigStepExpr    goto state 21
	Expr           goto state 22
	Bindings       goto state 42
	Binding        goto state 43
	BasicTerm      goto state 23

State 29

	BasicTerm -> IDENT .                                (rule 64)
	BasicTerm -> IDENT . '(' TermArgs ')'               (rule 65)
	Goal -> IDENT . 'in' Term                           (rule 71)

	'~>'           reduce using rule 64
	'='            reduce using rule 64
	'/='           reduce using rule 64
	'in'           shift, and enter state 40
	'('            shift, and enter state 37
	'['            reduce using rule 64
	']'            reduce using rule 64
	';'            reduce using rule 64
	%eof           reduce using rule 64


State 30

	BasicTerm -> INTLIT .                               (rule 67)

	'~>'           reduce using rule 67
	'='            reduce using rule 67
	'/='           reduce using rule 67
	')'            reduce using rule 67
	'}'            reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67
	'|'            reduce using rule 67
	'|->'          reduce using rule 67
	%eof           reduce using rule 67


State 31

	BasicTerm -> HASKEXPR .                             (rule 66)

	'~>'           reduce using rule 66
	'='            reduce using rule 66
	'/='           reduce using rule 66
	')'            reduce using rule 66
	'}'            reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66
	'|'            reduce using rule 66
	'|->'          reduce using rule 66
	%eof           reduce using rule 66


State 32

	%start_parseRuleTokens -> Rule .                    (rule 2)

	%eof           accept


State 33

	Rule -> 'rule' . STRING '[' Goals ']' '=>' '[' TermList ']'    (rule 34)

	STRING         shift, and enter state 39


State 34

	%start_parseTermTokens -> Term .                    (rule 1)
	Term -> Term . '~>' Term                            (rule 51)

	'~>'           shift, and enter state 38
	%eof           accept


State 35

	BasicTerm -> IDENT .                                (rule 64)
	BasicTerm -> IDENT . '(' TermArgs ')'               (rule 65)

	'~>'           reduce using rule 64
	'='            reduce using rule 64
	'/='           reduce using rule 64
	'('            shift, and enter state 37
	')'            reduce using rule 64
	'}'            reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64
	'|'            reduce using rule 64
	'|->'          reduce using rule 64
	%eof           reduce using rule 64


State 36

	%start_parseProgramTokens -> Program .              (rule 0)

	%eof           accept


State 37

	BasicTerm -> IDENT '(' . TermArgs ')'               (rule 65)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 45
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	TermArgs       goto state 81
	TermArgList    goto state 67
	Term           goto state 68
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 38

	Term -> Term '~>' . Term                            (rule 51)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 80
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 39

	Rule -> 'rule' STRING . '[' Goals ']' '=>' '[' TermList ']'    (rule 34)

	'['            shift, and enter state 79


State 40

	Goal -> IDENT 'in' . Term                           (rule 71)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 78
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 41

	Term -> Term . '~>' Term                            (rule 51)
	Binding -> Term . '|->' Term                        (rule 60)

	'~>'           shift, and enter state 38
	'|->'          shift, and enter state 77


State 42

	Expr -> '[' Bindings . ']'                          (rule 55)

	']'            shift, and enter state 76


State 43

	Bindings -> Binding .                               (rule 58)
	Bindings -> Binding . ';' Bindings                  (rule 59)

	']'            reduce using rule 58
	';'            shift, and enter state 75


State 44

	Term -> Term . '~>' Term                            (rule 51)
	Elements -> Term .                                  (rule 62)
	Elements -> Term . ',' Elements                     (rule 63)

	'~>'           shift, and enter state 38
	')'            reduce using rule 62
	'}'            reduce using rule 62
	','            shift, and enter state 74


State 45

	Term -> '{' Elements . '}'                          (rule 53)

	'}'            shift, and enter state 73


State 46

	BigStepExpr -> '(' Elements . ')' '⇓' '(' Elements ')'    (rule 54)

	')'            shift, and enter state 72


State 47

	Expr -> BasicTerm '[' . Bindings ']'                (rule 56)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	']'            reduce using rule 57
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 41
	BigStepExpr    goto state 21
	Expr           goto state 22
	Bindings       goto state 71
	Binding        goto state 43
	BasicTerm      goto state 23

State 48

	Goal -> Term '=' . Term                             (rule 72)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 70
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 49

	Goal -> Term '/=' . Term                            (rule 73)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 69
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 50

	RewriteRule -> IDENT '(' . TermArgs ')' '=' Term    (rule 43)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 45
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	TermArgs       goto state 66
	TermArgList    goto state 67
	Term           goto state 68
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 51

	ImportDecl -> 'import' STRING .                     (rule 44)

	';'            reduce using rule 44


State 52

	TransitionDecl -> 'transition' IDENT . '~>' IDENT    (rule 42)

	'~>'           shift, and enter state 65


State 53

	SyntaxBlock -> 'syntax' '{' . SyntaxDecls '}'       (rule 14)

	'}'            reduce using rule 15
	IDENT          shift, and enter state 63
	HASKEXPR       shift, and enter state 64

	SyntaxDecls    goto state 59
	SyntaxDecl     goto state 60
	TypeRef        goto state 61
	IdentList      goto state 62

State 54

	RulesBlock -> 'rules' '{' . Rules '}'               (rule 31)

	'rule'         shift, and enter state 33
	'}'            reduce using rule 32

	Rules          goto state 57
	Rule           goto state 58

State 55

	ProgramElement -> Declaration ';' .                 (rule 7)

	'rules'        reduce using rule 7
	'syntax'       reduce using rule 7
	'transition'   reduce using rule 7
	'import'       reduce using rule 7
	IDENT          reduce using rule 7
	HASKBLOCK      reduce using rule 7
	%eof           reduce using rule 7


State 56

	ProgramElements -> ProgramElement ProgramElements .    (rule 6)

	%eof           reduce using rule 6


State 57

	RulesBlock -> 'rules' '{' Rules . '}'               (rule 31)

	'}'            shift, and enter state 101


State 58

	Rules -> Rule . ';' Rules                           (rule 33)

	';'            shift, and enter state 100


State 59

	SyntaxBlock -> 'syntax' '{' SyntaxDecls . '}'       (rule 14)

	'}'            shift, and enter state 99


State 60

	SyntaxDecls -> SyntaxDecl . ';' SyntaxDecls         (rule 16)

	';'            shift, and enter state 98


State 61

	SyntaxDecl -> TypeRef . MaybeProductions            (rule 17)

	'::='          shift, and enter state 97
	';'            reduce using rule 27

	MaybeProductionsgoto state 96

State 62

	SyntaxDecl -> IdentList . 'in' TypeRef MaybeProductions    (rule 18)

	'in'           shift, and enter state 95


State 63

	TypeRef -> IDENT .                                  (rule 19)
	TypeRef -> IDENT . '(' TypeRefs ')'                 (rule 20)
	IdentList -> IDENT .                                (rule 25)
	IdentList -> IDENT . ',' IdentList                  (rule 26)

	'::='          reduce using rule 19
	'in'           reduce using rule 25
	'('            shift, and enter state 93
	','            shift, and enter state 94
	';'            reduce using rule 19


State 64

	TypeRef -> HASKEXPR .                               (rule 21)

	'::='          reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	';'            reduce using rule 21


State 65

	TransitionDecl -> 'transition' IDENT '~>' . IDENT    (rule 42)

	IDENT          shift, and enter state 92


State 66

	RewriteRule -> IDENT '(' TermArgs . ')' '=' Term    (rule 43)

	')'            shift, and enter state 91


State 67

	TermArgs -> TermArgList .                           (rule 46)

	')'            reduce using rule 46


State 68

	TermArgList -> Term .                               (rule 47)
	TermArgList -> Term . ',' TermArgList               (rule 48)
	Term -> Term . '~>' Term                            (rule 51)

	'~>'           shift, and enter state 38
	')'            reduce using rule 47
	','            shift, and enter state 90


State 69

	Term -> Term . '~>' Term                            (rule 51)
	Goal -> Term '/=' Term .                            (rule 73)

	'~>'           shift, and enter state 38
	']'            reduce using rule 73
	';'            reduce using rule 73
	%eof           reduce using rule 73


State 70

	Term -> Term . '~>' Term                            (rule 51)
	Goal -> Term '=' Term .                             (rule 72)

	'~>'           shift, and enter state 38
	']'            reduce using rule 72
	';'            reduce using rule 72
	%eof           reduce using rule 72


State 71

	Expr -> BasicTerm '[' Bindings . ']'                (rule 56)

	']'            shift, and enter state 89


State 72

	BigStepExpr -> '(' Elements ')' . '⇓' '(' Elements ')'    (rule 54)

	'⇓'            shift, and enter state 88


State 73

	Term -> '{' Elements '}' .                          (rule 53)

	'~>'           reduce using rule 53
	'='            reduce using rule 53
	'/='           reduce using rule 53
	')'            reduce using rule 53
	'}'            reduce using rule 53
	']'            reduce using rule 53
	','            reduce using rule 53
	';'            reduce using rule 53
	'|'            reduce using rule 53
	'|->'          reduce using rule 53
	%eof           reduce using rule 53


State 74

	Elements -> Term ',' . Elements                     (rule 63)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 61
	'{'            shift, and enter state 27
	'}'            reduce using rule 61
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 44
	BigStepExpr    goto state 21
	Expr           goto state 22
	Elements       goto state 87
	BasicTerm      goto state 23

State 75

	Bindings -> Binding ';' . Bindings                  (rule 59)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	']'            reduce using rule 57
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 41
	BigStepExpr    goto state 21
	Expr           goto state 22
	Bindings       goto state 86
	Binding        goto state 43
	BasicTerm      goto state 23

State 76

	Expr -> '[' Bindings ']' .                          (rule 55)

	'~>'           reduce using rule 55
	'='            reduce using rule 55
	'/='           reduce using rule 55
	')'            reduce using rule 55
	'}'            reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'|'            reduce using rule 55
	'|->'          reduce using rule 55
	%eof           reduce using rule 55


State 77

	Binding -> Term '|->' . Term                        (rule 60)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 85
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 78

	Term -> Term . '~>' Term                            (rule 51)
	Goal -> IDENT 'in' Term .                           (rule 71)

	'~>'           shift, and enter state 38
	']'            reduce using rule 71
	';'            reduce using rule 71
	%eof           reduce using rule 71


State 79

	Rule -> 'rule' STRING '[' . Goals ']' '=>' '[' TermList ']'    (rule 34)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	']'            reduce using rule 35
	IDENT          shift, and enter state 29
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Goals          goto state 83
	Term           goto state 20
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23
	Goal           goto state 84

State 80

	Term -> Term . '~>' Term                            (rule 51)
	Term -> Term '~>' Term .                            (rule 51)

	'~>'           shift, and enter state 38
	'='            reduce using rule 51
	'/='           reduce using rule 51
	')'            reduce using rule 51
	'}'            reduce using rule 51
	']'            reduce using rule 51
	','            reduce using rule 51
	';'            reduce using rule 51
	'|'            reduce using rule 51
	'|->'          reduce using rule 51
	%eof           reduce using rule 51


State 81

	BasicTerm -> IDENT '(' TermArgs . ')'               (rule 65)

	')'            shift, and enter state 82


State 82

	BasicTerm -> IDENT '(' TermArgs ')' .               (rule 65)

	'~>'           reduce using rule 65
	'='            reduce using rule 65
	'/='           reduce using rule 65
	')'            reduce using rule 65
	'}'            reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65
	'|'            reduce using rule 65
	'|->'          reduce using rule 65
	%eof           reduce using rule 65


State 83

	Rule -> 'rule' STRING '[' Goals . ']' '=>' '[' TermList ']'    (rule 34)

	']'            shift, and enter state 116


State 84

	Goals -> Goal .                                     (rule 36)
	Goals -> Goal . ';' Goals                           (rule 37)

	']'            reduce using rule 36
	';'            shift, and enter state 115


State 85

	Term -> Term . '~>' Term                            (rule 51)
	Binding -> Term '|->' Term .                        (rule 60)

	'~>'           shift, and enter state 38
	']'            reduce using rule 60
	';'            reduce using rule 60


State 86

	Bindings -> Binding ';' Bindings .                  (rule 59)

	']'            reduce using rule 59


State 87

	Elements -> Term ',' Elements .                     (rule 63)

	')'            reduce using rule 63
	'}'            reduce using rule 63


State 88

	BigStepExpr -> '(' Elements ')' '⇓' . '(' Elements ')'    (rule 54)

	'('            shift, and enter state 114


State 89

	Expr -> BasicTerm '[' Bindings ']' .                (rule 56)

	'~>'           reduce using rule 56
	'='            reduce using rule 56
	'/='           reduce using rule 56
	')'            reduce using rule 56
	'}'            reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'|'            reduce using rule 56
	'|->'          reduce using rule 56
	%eof           reduce using rule 56


State 90

	TermArgList -> Term ',' . TermArgList               (rule 48)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	TermArgList    goto state 113
	Term           goto state 68
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 91

	RewriteRule -> IDENT '(' TermArgs ')' . '=' Term    (rule 43)

	'='            shift, and enter state 112


State 92

	TransitionDecl -> 'transition' IDENT '~>' IDENT .    (rule 42)

	';'            reduce using rule 42


State 93

	TypeRef -> IDENT '(' . TypeRefs ')'                 (rule 20)

	')'            reduce using rule 22
	IDENT          shift, and enter state 107
	HASKEXPR       shift, and enter state 64

	TypeRef        goto state 110
	TypeRefs       goto state 111

State 94

	IdentList -> IDENT ',' . IdentList                  (rule 26)

	IDENT          shift, and enter state 109

	IdentList      goto state 108

State 95

	SyntaxDecl -> IdentList 'in' . TypeRef MaybeProductions    (rule 18)

	IDENT          shift, and enter state 107
	HASKEXPR       shift, and enter state 64

	TypeRef        goto state 106

State 96

	SyntaxDecl -> TypeRef MaybeProductions .            (rule 17)

	';'            reduce using rule 17


State 97

	MaybeProductions -> '::=' . Productions             (rule 28)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Productions    goto state 104
	Term           goto state 105
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 98

	SyntaxDecls -> SyntaxDecl ';' . SyntaxDecls         (rule 16)

	'}'            reduce using rule 15
	IDENT          shift, and enter state 63
	HASKEXPR       shift, and enter state 64

	SyntaxDecls    goto state 103
	SyntaxDecl     goto state 60
	TypeRef        goto state 61
	IdentList      goto state 62

State 99

	SyntaxBlock -> 'syntax' '{' SyntaxDecls '}' .       (rule 14)

	';'            reduce using rule 14


State 100

	Rules -> Rule ';' . Rules                           (rule 33)

	'rule'         shift, and enter state 33
	'}'            reduce using rule 32

	Rules          goto state 102
	Rule           goto state 58

State 101

	RulesBlock -> 'rules' '{' Rules '}' .               (rule 31)

	';'            reduce using rule 31


State 102

	Rules -> Rule ';' Rules .                           (rule 33)

	'}'            reduce using rule 33


State 103

	SyntaxDecls -> SyntaxDecl ';' SyntaxDecls .         (rule 16)

	'}'            reduce using rule 16


State 104

	MaybeProductions -> '::=' Productions .             (rule 28)

	';'            reduce using rule 28


State 105

	Productions -> Term .                               (rule 29)
	Productions -> Term . '|' Productions               (rule 30)
	Term -> Term . '~>' Term                            (rule 51)

	'~>'           shift, and enter state 38
	';'            reduce using rule 29
	'|'            shift, and enter state 124


State 106

	SyntaxDecl -> IdentList 'in' TypeRef . MaybeProductions    (rule 18)

	'::='          shift, and enter state 97
	';'            reduce using rule 27

	MaybeProductionsgoto state 123

State 107

	TypeRef -> IDENT .                                  (rule 19)
	TypeRef -> IDENT . '(' TypeRefs ')'                 (rule 20)

	'::='          reduce using rule 19
	'('            shift, and enter state 93
	')'            reduce using rule 19
	','            reduce using rule 19
	';'            reduce using rule 19


State 108

	IdentList -> IDENT ',' IdentList .                  (rule 26)

	'in'           reduce using rule 26


State 109

	IdentList -> IDENT .                                (rule 25)
	IdentList -> IDENT . ',' IdentList                  (rule 26)

	'in'           reduce using rule 25
	','            shift, and enter state 94


State 110

	TypeRefs -> TypeRef .                               (rule 23)
	TypeRefs -> TypeRef . ',' TypeRefs                  (rule 24)

	')'            reduce using rule 23
	','            shift, and enter state 122


State 111

	TypeRef -> IDENT '(' TypeRefs . ')'                 (rule 20)

	')'            shift, and enter state 121


State 112

	RewriteRule -> IDENT '(' TermArgs ')' '=' . Term    (rule 43)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 120
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 113

	TermArgList -> Term ',' TermArgList .               (rule 48)

	')'            reduce using rule 48


State 114

	BigStepExpr -> '(' Elements ')' '⇓' '(' . Elements ')'    (rule 54)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	')'            reduce using rule 61
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Term           goto state 44
	BigStepExpr    goto state 21
	Expr           goto state 22
	Elements       goto state 119
	BasicTerm      goto state 23

State 115

	Goals -> Goal ';' . Goals                           (rule 37)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	']'            reduce using rule 35
	IDENT          shift, and enter state 29
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Goals          goto state 118
	Term           goto state 20
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23
	Goal           goto state 84

State 116

	Rule -> 'rule' STRING '[' Goals ']' . '=>' '[' TermList ']'    (rule 34)

	'=>'           shift, and enter state 117


State 117

	Rule -> 'rule' STRING '[' Goals ']' '=>' . '[' TermList ']'    (rule 34)

	'['            shift, and enter state 128


State 118

	Goals -> Goal ';' Goals .                           (rule 37)

	']'            reduce using rule 37


State 119

	BigStepExpr -> '(' Elements ')' '⇓' '(' Elements . ')'    (rule 54)

	')'            shift, and enter state 127


State 120

	RewriteRule -> IDENT '(' TermArgs ')' '=' Term .    (rule 43)
	Term -> Term . '~>' Term                            (rule 51)

	'~>'           shift, and enter state 38
	';'            reduce using rule 43


State 121

	TypeRef -> IDENT '(' TypeRefs ')' .                 (rule 20)

	'::='          reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	';'            reduce using rule 20


State 122

	TypeRefs -> TypeRef ',' . TypeRefs                  (rule 24)

	')'            reduce using rule 22
	IDENT          shift, and enter state 107
	HASKEXPR       shift, and enter state 64

	TypeRef        goto state 110
	TypeRefs       goto state 126

State 123

	SyntaxDecl -> IdentList 'in' TypeRef MaybeProductions .    (rule 18)

	';'            reduce using rule 18


State 124

	Productions -> Term '|' . Productions               (rule 30)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Productions    goto state 125
	Term           goto state 105
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 125

	Productions -> Term '|' Productions .               (rule 30)

	';'            reduce using rule 30


State 126

	TypeRefs -> TypeRef ',' TypeRefs .                  (rule 24)

	')'            reduce using rule 24


State 127

	BigStepExpr -> '(' Elements ')' '⇓' '(' Elements ')' .    (rule 54)

	'~>'           reduce using rule 54
	'='            reduce using rule 54
	'/='           reduce using rule 54
	')'            reduce using rule 54
	'}'            reduce using rule 54
	']'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'|'            reduce using rule 54
	'|->'          reduce using rule 54
	%eof           reduce using rule 54


State 128

	Rule -> 'rule' STRING '[' Goals ']' '=>' '[' . TermList ']'    (rule 34)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	']'            reduce using rule 38
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	TermList       goto state 129
	Terms          goto state 130
	Term           goto state 131
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 129

	Rule -> 'rule' STRING '[' Goals ']' '=>' '[' TermList . ']'    (rule 34)

	']'            shift, and enter state 133


State 130

	TermList -> Terms .                                 (rule 39)

	']'            reduce using rule 39


State 131

	Terms -> Term .                                     (rule 40)
	Terms -> Term . ';' Terms                           (rule 41)
	Term -> Term . '~>' Term                            (rule 51)

	'~>'           shift, and enter state 38
	']'            reduce using rule 40
	';'            shift, and enter state 132


State 132

	Terms -> Term ';' . Terms                           (rule 41)

	BOOL           shift, and enter state 25
	'('            shift, and enter state 26
	'{'            shift, and enter state 27
	'['            shift, and enter state 28
	IDENT          shift, and enter state 35
	INTLIT         shift, and enter state 30
	HASKEXPR       shift, and enter state 31

	Terms          goto state 134
	Term           goto state 131
	BigStepExpr    goto state 21
	Expr           goto state 22
	BasicTerm      goto state 23

State 133

	Rule -> 'rule' STRING '[' Goals ']' '=>' '[' TermList ']' .    (rule 34)

	';'            reduce using rule 34
	%eof           reduce using rule 34


State 134

	Terms -> Term ';' Terms .                           (rule 41)

	']'            reduce using rule 41


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 74
Number of terminals: 29
Number of non-terminals: 36
Number of states: 135
